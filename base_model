# Correlating the electrochemistry parameters in the base model to get surface concentration and flux data 

import pybamm
import numpy as np

class MemCreateExpression:
    R: pybamm.Parameter
    model: pybamm.BaseModel

    def set_random_seed(seed_value=42):
    np.random.seed(seed_value)

    def setup(self):
        set_random_seed()

    def mem_create_expression(self):
        self.R = pybamm.Parameter("Particle radius [m]")
        D = pybamm.Parameter("Diffusion coefficient [m2.s-1]")
        j = pybamm.Parameter("Interfacial current density [A.m-2]")
        F = pybamm.Parameter("Faraday constant [C.mol-1]")
        c0 = pybamm.Parameter("Initial concentration [mol.m-3]")
        self.model = pybamm.BaseModel()

        c = pybamm.Variable("Concentration [mol.m-3]", domain="negative particle")
        N = -D * pybamm.grad(c)
        dcdt = -pybamm.div(N)
        self.model.rhs = {c: dcdt}

        lbc = pybamm.Scalar(0)
        rbc = -j / F / D
        self.model.boundary_conditions = {
            c: {"left": (lbc, "Neumann"), "right": (rbc, "Neumann")}
        }

        self.model.initial_conditions = {c: c0}
        self.model.variables = {
            "Concentration [mol.m-3]": c,
            "Surface concentration [mol.m-3]": pybamm.surf(c),
            "Flux [mol.m-2.s-1]": N,
        }
        return self.model
